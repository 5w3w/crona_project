services:
  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf:/etc/nginx/ssl/:ro
      - ./web:/etc/nginx/web
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  db:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: crona_adm
      POSTGRES_PASSWORD: crona_adm_pass
    volumes:
      - local_pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      back:
        ipv4_address: 10.4.0.3
  auth:
    image: node
    restart: always
    user: node
    working_dir: /home/node/app
    depends_on:
      db:
        condition: service_started
    environment:
      - NODE_ENV=production
    ports:
      - 5000:1004
    volumes:
      - ./auth:/home/node/app
    command: "node index.js"
    networks:
      default:
      back:
        ipv4_address: 10.4.0.4
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5000:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: crona_adm_log
      PGADMIN_DEFAULT_PASSWORD: crona_adm_pass
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      back:
        ipv4_address: 10.4.0.2
      default: 

volumes:
  local_pgdata:
  pgadmin-data:

networks:
  back:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.4.0.0/16
